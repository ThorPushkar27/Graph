TC = O(V+E)
SC = O(V)

class Solution {
  public:
  bool dfs(int node, int parent, vector<int>adj[], vector<int>&visited){
      //Maintaining parent while cycle detection is very very importannt.
      visited[node]=1;
      
      for(auto it: adj[node]){
          if(visited[it]==0){
              visited[it]=1;
              if(dfs(it,node,adj,visited)) return true;
             
          }
          else if(it!=parent){
              return true;
          }
      }
      return false;
  }
    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
        //vector<int>adj[];
        vector<int>visited(V,0);
        for(int i=0; i<V; i++){
            if(visited[i]==0){
                
                if(dfs(i,-1,adj,visited)) return true;
            }
        }
        return false;
        // Code here
    }
};
