TC = O(n*m)
SC= O(n*m)

class Solution {
public:
    void dfs(int row, int col, vector<vector<int>>&visited, vector<vector<char>>&grid,vector<pair<int,int>>&vec, int ax[], int ay[]){
        int a = grid.size();
        int b = grid[0].size(); 
        visited[row][col] =1;
        vec.push_back({row,col});
        for(int i =0; i<4; i++){
            int x = ax[i]+row;
            int y = ay[i]+col;

            if(x>=0 && x<a && y>=0 && y<b && visited[x][y]==0 && grid[x][y]=='1'){
                dfs(x,y,visited,grid,vec,ax,ay);
            }
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        int ax[4] ={1,-1,0,0};
        int ay[4] ={0,0,1,-1};
        vector<vector<int>>visited(n,vector<int>(m,0));
        stack<vector<pair<int,int>>>st;
        for(int i =0; i<n; i++){
            for(int j =0; j<m; j++){
                if(visited[i][j]==0 && grid[i][j]=='1'){
                    vector<pair<int,int>>vec;
                    dfs(i,j, visited,grid,vec,ax,ay);
                    st.push(vec);
                }
            }
        }
        return st.size();
        
    }
};
