TC = O(n*m)
SC= O(n*m)

class Solution {
  public:
    void dfs(int row, int col, vector<vector<int>>&visited, vector<vector<int>>&grid, int ax[],int ay[],vector<pair<int, int>>&vec,int baserow, int basecol ){
        //int coun =0;
        int a = grid.size();
        int b = grid[0].size();
        visited[row][col] =1;
        vec.push_back({row-baserow,col-basecol});
        for(int i =0; i<4; i++){
            int x = ax[i]+ row;
            int y = ay[i]+ col;
            if(x>=0 && x<a && y>=0 && y<b && visited[x][y]==0 && grid[x][y]==1){
                dfs(x,y,visited,grid,ax,ay,vec, baserow,basecol);
                //coun++;
            }
            
        }
    }
    int countDistinctIslands(vector<vector<int>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        int ax[4] = {1,-1,0,0};
        int ay[4] = {0,0,1,-1};
        //int count =0;
        set<vector<pair<int, int>>>st;
        vector<vector<int>>visited(n, vector<int>(m,0));
        for(int  i =0; i<n; i++){
            for(int j=0; j<m; j++){
                if(visited[i][j]==0 && grid[i][j]==1){
                    vector<pair<int, int>>vec;
                    dfs(i,j, visited,grid,ax,ay,vec,i,j);
                    st.insert(vec);
                    
                }
                
                
                
            }
        }
        return st.size();
        
        // code here
    }
};
